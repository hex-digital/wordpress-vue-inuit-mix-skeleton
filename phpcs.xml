<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Example Project" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd">

    <description>The ROKA PHP Coding Standards</description>

    <config name="installed_paths" value="wpcs"/>
    <arg name="colors"/>
    <arg name="parallel" value="75"/>
    <arg value="spvn"/>
    <ini name="memory_limit" value="128M"/>

    <!-- Exclude the Coding Standards directory. -->
    <exclude-pattern>/wpcs/*</exclude-pattern>

    <!-- Exclude the Composer Vendor directory. -->
    <exclude-pattern>/vendor/*</exclude-pattern>

    <!-- Exclude the Node Modules directory. -->
    <exclude-pattern>/node_modules/*</exclude-pattern>

    <!-- Exclude minified files. -->
    <exclude-pattern>*.min.*</exclude-pattern>

    <!-- Include the WordPress-Extra standard. -->
    <rule ref="WordPress-Extra">
        <!--
        We may want a middle ground though. The best way to do this is add the
        entire ruleset, then rule by rule, remove ones that don't suit a project.
        We can do this by running `phpcs` with the '-s' flag, which allows us to
        see the names of the sniffs reporting errors.
        Once we know the sniff names, we can opt to exclude sniffs which don't
        suit our project like so.

        The below two examples just show how you can exclude rules.
        They are not intended as advice about which sniffs to exclude.
        -->

        <!--
        <exclude name="WordPress.WhiteSpace.ControlStructureSpacing"/>
        <exclude name="WordPress.Security.EscapeOutput"/>
        -->

        <!-- Change tab indent to spaces -->
        <exclude name="Generic.WhiteSpace.DisallowSpaceIndent"/>

        <rule ref="Generic.WhiteSpace.ScopeIndent">
            <properties>
                <property name="tabIndent" value="false"/>
            </properties>
        </rule>

        <!-- Enforce short tags -->
        <exclude name="Generic.PHP.DisallowShortOpenTag"/>
        <exclude name="Generic.PHP.DisallowAlternativePHPTags"/>

        <!-- Problem with single line short tags, so have to remove this -->
        <exclude name="Squiz.PHP.EmbeddedPhp.SpacingAfterOpen"/>

        <!-- We don't do this for small projects, but will for big, marketable themes -->
        <exclude name="WordPress.NamingConventions.PrefixAllGlobals.NonPrefixedVariableFound"/>
        <exclude name="WordPress.NamingConventions.PrefixAllGlobals.NonPrefixedFunctionFound"/>

        <!-- We don't want a semi-colon at the end of the line, so turn this off -->
        <exclude name="Squiz.PHP.EmbeddedPhp.NoSemicolon"/>
        <!-- @todo We need to add a rule that enforces NO semi-colon at the end of a single line -->

        <!-- We do not want all assignment operators to be lined up by their equals. Bleugh -->
        <exclude name="Generic.Formatting.MultipleStatementAlignment.NotSameWarning"/>
    </rule>

    <!-- Let's also check that everything is properly documented. -->
    <rule ref="WordPress-Docs"/>

    <!-- Add in some extra rules from other standards. -->
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.Commenting.Todo"/>

    <!-- We only want short array syntax -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

    <!-- Check for PHP cross-version compatibility. -->
    <!--
    To enable this, the PHPCompatibilityWP standard needs
    to be installed.
    See the readme for installation instructions:
    https://github.com/PHPCompatibility/PHPCompatibilityWP
    For more information, also see:
    https://github.com/PHPCompatibility/PHPCompatibility
    -->
    <!--
    <config name="testVersion" value="5.2-"/>
    <rule ref="PHPCompatibilityWP"/>
    -->

    <!--
    To get the optimal benefits of using WPCS, we should add a couple of
    custom properties.
    Adjust the values of these properties to fit our needs.

    For information on additional custom properties available, check out
    the wiki:
    https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties
    -->
    <config name="minimum_supported_wp_version" value="5.0"/>

    <!--<rule ref="WordPress.WP.I18n">-->
        <!--<properties>-->
            <!--<property name="text_domain" type="array">-->
                <!--<element value="my-textdomain"/>-->
                <!--<element value="library-textdomain"/>-->
            <!--</property>-->
        <!--</properties>-->
    <!--</rule>-->

    <!--<rule ref="WordPress.NamingConventions.PrefixAllGlobals">-->
        <!--<properties>-->
            <!--<property name="prefixes" type="array">-->
                <!--<element value="my_prefix"/>-->
            <!--</property>-->
        <!--</properties>-->
    <!--</rule>-->

</ruleset>
